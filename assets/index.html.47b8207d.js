import{r as d,o,c as f,b as t,a as i,w as h,F as b,d as r,e,p as g,f as v}from"./app.143b3677.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const p={},l=a=>(g("data-v-535f301b"),a=a(),v(),a),y=r('<h1 id="introduction" tabindex="-1" data-v-535f301b><a class="header-anchor" href="#introduction" aria-hidden="true" data-v-535f301b>#</a> Introduction</h1><p data-v-535f301b>Gridify is a dynamic LINQ library that simplifies the process of converting strings to LINQ queries. With exceptional performance and ease-of-use, Gridify makes it effortless to apply filtering, sorting, and pagination using text-based data.</p><h2 id="features" tabindex="-1" data-v-535f301b><a class="header-anchor" href="#features" aria-hidden="true" data-v-535f301b>#</a> Features</h2><ul data-v-535f301b><li data-v-535f301b>Fast and easy to use</li><li data-v-535f301b>Supports filtering, sorting, and pagination</li><li data-v-535f301b>Supports <code data-v-535f301b>string</code> to LINQ conversion</li><li data-v-535f301b>Supports nested queries and sub-collections</li><li data-v-535f301b>Supports <code data-v-535f301b>string</code> to <code data-v-535f301b>object</code> mapping</li><li data-v-535f301b>Supports query compilation</li><li data-v-535f301b>Supports collection indexes</li><li data-v-535f301b>Custom Operators</li><li data-v-535f301b>Compatible with ORMs, especially Entity Framework</li><li data-v-535f301b>Can be used on every collection that LINQ supports</li><li data-v-535f301b>Compatible with object-mappers like AutoMapper</li></ul><h2 id="examples" tabindex="-1" data-v-535f301b><a class="header-anchor" href="#examples" aria-hidden="true" data-v-535f301b>#</a> Examples</h2><p data-v-535f301b>To better illustrate how Gridify works, we&#39;ve prepared a few examples:</p>',6),u=e("Using Gridify in API Controllers"),x=l(()=>t("li",null,"Coming soon ...",-1)),m=r('<h2 id="performance" tabindex="-1" data-v-535f301b><a class="header-anchor" href="#performance" aria-hidden="true" data-v-535f301b>#</a> Performance</h2><p data-v-535f301b>Filtering can be the most expensive feature in Gridify. The following benchmark compares filtering in the most well-known dynamic LINQ libraries. As you can see, Gridify has the closest result to native LINQ:</p><table data-v-535f301b><thead data-v-535f301b><tr data-v-535f301b><th data-v-535f301b>Method</th><th style="text-align:right;" data-v-535f301b>Mean</th><th style="text-align:right;" data-v-535f301b>Error</th><th style="text-align:right;" data-v-535f301b>Ratio</th><th style="text-align:right;" data-v-535f301b>Gen 0</th><th style="text-align:right;" data-v-535f301b>Gen 1</th><th style="text-align:right;" data-v-535f301b>Allocated</th></tr></thead><tbody data-v-535f301b><tr data-v-535f301b><td data-v-535f301b>Native LINQ</td><td style="text-align:right;" data-v-535f301b>806.3 us</td><td style="text-align:right;" data-v-535f301b>4.89 us</td><td style="text-align:right;" data-v-535f301b>1.00</td><td style="text-align:right;" data-v-535f301b>4.8828</td><td style="text-align:right;" data-v-535f301b>1.9531</td><td style="text-align:right;" data-v-535f301b>35 KB</td></tr><tr data-v-535f301b><td data-v-535f301b>Gridify</td><td style="text-align:right;" data-v-535f301b>839.6 us</td><td style="text-align:right;" data-v-535f301b>5.69 us</td><td style="text-align:right;" data-v-535f301b>1.04</td><td style="text-align:right;" data-v-535f301b>5.8594</td><td style="text-align:right;" data-v-535f301b>2.9297</td><td style="text-align:right;" data-v-535f301b>39 KB</td></tr><tr data-v-535f301b><td data-v-535f301b>DynamicLinq</td><td style="text-align:right;" data-v-535f301b>973.8 us</td><td style="text-align:right;" data-v-535f301b>8.65 us</td><td style="text-align:right;" data-v-535f301b>1.21</td><td style="text-align:right;" data-v-535f301b>19.5313</td><td style="text-align:right;" data-v-535f301b>9.7656</td><td style="text-align:right;" data-v-535f301b>123 KB</td></tr><tr data-v-535f301b><td data-v-535f301b>Sieve</td><td style="text-align:right;" data-v-535f301b>1,299.7 us</td><td style="text-align:right;" data-v-535f301b>12.74 us</td><td style="text-align:right;" data-v-535f301b>1.61</td><td style="text-align:right;" data-v-535f301b>7.8125</td><td style="text-align:right;" data-v-535f301b>3.9063</td><td style="text-align:right;" data-v-535f301b>53 KB</td></tr><tr data-v-535f301b><td data-v-535f301b>Fop</td><td style="text-align:right;" data-v-535f301b>3,498.6 us</td><td style="text-align:right;" data-v-535f301b>29.45 us</td><td style="text-align:right;" data-v-535f301b>4.34</td><td style="text-align:right;" data-v-535f301b>54.6875</td><td style="text-align:right;" data-v-535f301b>27.3438</td><td style="text-align:right;" data-v-535f301b>348 KB</td></tr><tr data-v-535f301b><td data-v-535f301b>CSharp Scripting</td><td style="text-align:right;" data-v-535f301b>231,510.6 us</td><td style="text-align:right;" data-v-535f301b>4,406.95 us</td><td style="text-align:right;" data-v-535f301b>287.13</td><td style="text-align:right;" data-v-535f301b>3000.0000</td><td style="text-align:right;" data-v-535f301b>1000.0000</td><td style="text-align:right;" data-v-535f301b>24,198 KB</td></tr></tbody></table>',3),_={class:"custom-container details"},I=l(()=>t("p",null,"BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000 11th Gen Intel Core i5-11400F 2.60GHz, 1 CPU, 12 logical and 6 physical cores .NET SDK=6.0.100 [Host] : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT",-1)),k=e("This Benchmark is available "),N={href:"https://github.com/alirezanet/Gridify/blob/master/benchmark/LibraryComparisionFilteringBenchmark.cs",target:"_blank",rel:"noopener noreferrer"},S=e("Here");function w(a,L){const s=d("RouterLink"),n=d("ExternalLinkIcon");return o(),f(b,null,[y,t("ul",null,[t("li",null,[i(s,{to:"/example/api-controller.html"},{default:h(()=>[u]),_:1})]),x]),m,t("details",_,[I,t("p",null,[k,t("a",N,[S,i(n)])])])],64)}var G=c(p,[["render",w],["__scopeId","data-v-535f301b"]]);export{G as default};
